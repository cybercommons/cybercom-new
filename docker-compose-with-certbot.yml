version: "3.7"
services:
  cybercom_nginx:
    image: nginx:1.17
    restart: unless-stopped
    expose:
      - 80
      - 443
    ports:
      - 80:80
      - 443:443
    depends_on:
      - cybercom_api
    volumes:
      - ./dc_config/nginx/config/letsencrypt.conf:/etc/nginx/conf.d/default.conf
      - ./web:/usr/share/nginx/html
      - ./dc_config/ssl/nginx/letsencrypt/etc/live/${FULL_QUALIFIED_DOMAIN_NAME}/fullchain.pem:/etc/letsencrypt/live/${FULL_QUALIFIED_DOMAIN_NAME}/fullchain.pem
      - ./dc_config/ssl/backend/dhparam-2048.pem:/etc/ssl/certs/dhparam-2048.pem
      - ./dc_config/ssl/nginx/letsencrypt/etc/live/${FULL_QUALIFIED_DOMAIN_NAME}/privkey.pem:/etc/letsencrypt/live/${FULL_QUALIFIED_DOMAIN_NAME}/privkey.pem
  cybercom_mongo:
    image: mongo
    command: --tlsMode requireTLS --tlsCertificateKeyFile /ssl/server/mongodb.pem --tlsCAFile /ssl/testca/cacert.pem --auth
    restart: unless-stopped
    env_file:
      - dc_config/cybercom_config.env
      - dc_config/secrets.env
    expose:
      - 27017
    volumes:
      - mongodata:/data/db
      - ./dc_config/ssl/backend:/ssl
  cybercom_rabbitmq:
    image: rabbitmq:3.6
    restart: unless-stopped
    env_file:
      - dc_config/cybercom_config.env
      - dc_config/secrets.env
    volumes:
      - ./dc_config/ssl/backend:/ssl
    expose:
      - 5671
  cybercom_memcache:
    image: memcached
    restart: unless-stopped
    env_file:
      - dc_config/cybercom_config.env
    expose:
      - 11211
    ports:
      - 11211:11211
  cybercom_celery:
    image: celeryapp
    restart: unless-stopped
    build: dc_config/images/celery
    cap_add:
      - MKNOD
      - SYS_ADMIN
    security_opt:
      - apparmor:unconfined
    devices:
      - /dev/fuse
    volumes:
      - ./dc_config/ssl/backend:/ssl
    env_file:
      - dc_config/cybercom_config.env
      - dc_config/secrets.env
    depends_on:
      - cybercom_mongo
      - cybercom_rabbitmq
  cybercom_api:
    image: api:latest
    restart: unless-stopped
    user: "${UID}:${GID}"
    build:
      context: .
      args:
        UNAME: apiuser
        UID: "${UID}"
        GID: "${GID}"
    env_file:
      - dc_config/cybercom_config.env
      - dc_config/secrets.env
    volumes:
      - ./dc_config/ssl/backend:/ssl
      - ./db.sqlite3:/app/db.sqlite3
    expose:
      - 8080
    ports:
      - 8080:8080
    depends_on:
      - cybercom_mongo
      - cybercom_rabbitmq
volumes:
  mongodata:
    name: "${MONGO_DOCKER_VOLUME_PREFIX}_mongo"
    external: true
